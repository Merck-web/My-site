<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="457db6f4-eb48-4e01-9ee3-df1cba94973c" name="Changes" comment="remake">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/git_toolbox_prj.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/quasar-nuxt3-ssr.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/watcherTasks.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/app.config.mjs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/components.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/imports.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/nuxt.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/tsconfig.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/types/app.config.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/types/imports.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/types/nitro.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/types/plugins.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/types/schema.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.nuxt/types/vue-shim.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.vite/deps/_metadata.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.vite/deps/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.vite/deps/vue.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.vite/deps/vue.js.map" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/app.vue" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/assets/logo.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/assets/styles/quasar-variables.sass" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/assets/styles/quasar.sass" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/MainPage/Contact.vue" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/MainPage/Header.vue" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/MainPage/Home.vue" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/css/font-awesome.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/css/responsive.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/css/skins/color-1.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/css/skins/color-2.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/css/skins/color-3.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/css/skins/color-4.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/css/skins/color-5.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/css/style-switcher.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/css/style.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/layouts/default.vue" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/nuxt.config.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/index.vue" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/plugins/fake-dom.server.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/plugins/helpers.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/plugins/masks.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/plugins/quasar.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="HARD" />
  </component>
  <component name="GitToolBoxStore">
    <option name="projectConfigVersion" value="5" />
    <option name="recentBranches">
      <RecentBranches>
        <option name="branchesForRepo">
          <list>
            <RecentBranchesForRepo>
              <option name="branches">
                <list>
                  <RecentBranch>
                    <option name="branchName" value="leha/remaster" />
                    <option name="lastUsedInstant" value="1689401588" />
                  </RecentBranch>
                  <RecentBranch>
                    <option name="branchName" value="master" />
                    <option name="lastUsedInstant" value="1689401587" />
                  </RecentBranch>
                </list>
              </option>
              <option name="repositoryRootUrl" value="file://$PROJECT_DIR$" />
            </RecentBranchesForRepo>
          </list>
        </option>
      </RecentBranches>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Sb35zGQc76N4kiromj8oklIJPY" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;leha/remaster&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;prettier.import.notification.dismissed&quot;: &quot;true&quot;,
    &quot;ts.external.directory.path&quot;: &quot;D:\\Users\\mrclll\\WebstormProjects\\My-site\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="npm.start">
    <configuration name="build" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="build" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="dev" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="start" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/server/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.start" />
        <item itemvalue="npm.dev" />
        <item itemvalue="npm.build" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="457db6f4-eb48-4e01-9ee3-df1cba94973c" name="Changes" comment="remake" />
      <created>1689401578976</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1689401578976</updated>
      <workItem from="1689401580512" duration="1890000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>